//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Editor.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Editor.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export.
        /// </summary>
        internal static string ExportFolderName {
            get {
                return ResourceManager.GetString("ExportFolderName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GPX.
        /// </summary>
        internal static string GPXFolderName {
            get {
                return ResourceManager.GetString("GPXFolderName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maps.
        /// </summary>
        internal static string MapFolderName {
            get {
                return ResourceManager.GetString("MapFolderName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AiOZFEZdEmq_wc2MzSWNRiLJeW3P_vHYTHVYivmFWzPtsnKFb-WwIsxTm3WTyCwe.
        /// </summary>
        internal static string MapServiceKey {
            get {
                return ResourceManager.GetString("MapServiceKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///  &lt;head&gt;
        ///    &lt;title&gt;{TrackName}&lt;/title&gt;
        ///    &lt;meta charset=&quot;utf-8&quot; /&gt;
        ///  &lt;/head&gt;
        ///  &lt;body&gt;
        ///    &lt;div id=&apos;myMap&apos;&gt;&lt;/div&gt;
        ///    &lt;script type=&apos;text/javascript&apos;&gt;
        ///      function loadMapScenario() {
        ///        var map = new Microsoft.Maps.Map(document.getElementById(&apos;myMap&apos;), {
        ///          credentials: &apos;{MapServiceKey}&apos;,
        ///          mapTypeId: Microsoft.Maps.MapTypeId.aerial
        ///        });
        ///        var locations = [{locations}];
        ///        var polyline = new Microsoft.Maps.Polyline(locations, nul [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TracksHtmlMapTemplate {
            get {
                return ResourceManager.GetString("TracksHtmlMapTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///  &lt;head&gt;
        ///    &lt;title&gt;{PageTitle}&lt;/title&gt;
        ///    &lt;meta charset=&quot;utf-8&quot; /&gt;
        ///  &lt;/head&gt;
        ///  &lt;body&gt;
        ///    &lt;div id=&apos;myMap&apos;&gt;&lt;/div&gt;
        ///    &lt;script type=&apos;text/javascript&apos;&gt;
        ///      function loadMapScenario() {
        ///        var map = new Microsoft.Maps.Map(document.getElementById(&apos;myMap&apos;), {
        ///          credentials: &apos;{MapServiceKey}&apos;
        ///        });
        ///        var locations = [{locations}];
        ///        var options = [{options}];
        ///        for (i = 0;i &lt; locations.length; i++) {
        ///          map.entities.push(new Mic [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WaypointHtmlMapTemplate {
            get {
                return ResourceManager.GetString("WaypointHtmlMapTemplate", resourceCulture);
            }
        }
    }
}
